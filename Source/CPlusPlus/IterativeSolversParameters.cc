#include "IterativeSolversParameters.h"
#include "Permutation.h"

////////////////////////////////////////////////////////////////////////////////
extern "C" {
#include "IterativeSolversParameters_c.h"
}

////////////////////////////////////////////////////////////////////////////////
namespace NTPoly {
////////////////////////////////////////////////////////////////////////////////
IterativeSolverParameters::IterativeSolverParameters() {
  ConstructIterativeSolverParameters_wrp(ih_this);
}

////////////////////////////////////////////////////////////////////////////////
IterativeSolverParameters::~IterativeSolverParameters() {
  DestructIterativeSolverParameters_wrp(ih_this);
}

////////////////////////////////////////////////////////////////////////////////
void IterativeSolverParameters::SetConvergeDiff(double new_value) {
  SetIterativeConvergeDiff_wrp(ih_this, &new_value);
}

////////////////////////////////////////////////////////////////////////////////
void IterativeSolverParameters::SetMaxIterations(int new_value) {
  SetIterativeMaxIterations_wrp(ih_this, &new_value);
}

////////////////////////////////////////////////////////////////////////////////
void IterativeSolverParameters::SetVerbosity(bool new_value) {
  SetIterativeBeVerbose_wrp(ih_this, &new_value);
}

////////////////////////////////////////////////////////////////////////////////
void IterativeSolverParameters::SetThreshold(double new_value) {
  SetIterativeThreshold_wrp(ih_this, &new_value);
}

////////////////////////////////////////////////////////////////////////////////
void IterativeSolverParameters::SetLoadBalance(const Permutation &new_value) {
  SetIterativeLoadBalance_wrp(ih_this, new_value.ih_this);
}
} // namespace NTPoly
